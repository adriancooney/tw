#!/usr/bin/env babel-node --

import program from "commander";
import TeamworkCLI from "../src/TeamworkCLI";

TeamworkCLI.command(() => {
    program
        .option("-l, --list", "Display projects as a static list.")
        .option("--starred", "Display only starred projects")
        .parse(process.argv);

    return TeamworkCLI.getAPI().then((api) => {
        return api.getProjects();
    }).then((projects) => {
        // Filter only the starred projects
        if(program.starred) {
            projects = projects.filter(project => project.starred);
        }

        // Sort projects by starred
        projects.sort((project) => project.starred ? -1 : 1);

        if(!program.list) {
            // Get the current project so we can highlight it in the list
            var current = TeamworkCLI.getCurrent("project");

            return TeamworkCLI.prompt([{
                type: "list",
                message: "Projects",
                name: "project",
                choices: projects.map((project) => {
                    var str = project.print();

                    // Highlight the current project
                    if(current && project.id === current.id) {
                        str = `${TeamworkCLI.color.yellow(str)} ${TeamworkCLI.color.blue("(current)")}`;
                    }

                    return {
                        name: str,
                        value: project
                    };
                })
            }]).then((answers) => {
                return TeamworkCLI.save(answers);
            }).then(() => {
                TeamworkCLI.log("Current project updated.");
            });
        } else {
            // Display a static list
            projects.forEach((project) => {
                TeamworkCLI.log(project.print());
            });
        }
    });
});